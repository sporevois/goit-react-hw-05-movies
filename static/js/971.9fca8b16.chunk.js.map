{"version":3,"file":"static/js/971.9fca8b16.chunk.js","mappings":"iRAaA,EATiB,SAAC,GAAsB,IAApBA,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SACtB,OACE,UAAC,KAAD,CAAMD,GAAIA,EAAV,WACE,SAAC,MAAD,CAAaE,KAAK,OACjBD,IAGN,EC4DD,EAjEqB,WAAO,IAAD,IACjBE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAY,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,KAE7CC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,WAAMC,GAAN,iGAESC,EAAAA,EAAAA,IAAaD,GAFtB,OAETE,EAFS,OAGfZ,EAAWY,GAHI,gDAKfV,EAAS,KAAMW,SALA,2GAAH,sDAUhBJ,EAAWb,EACZ,GAAE,CAACA,IAEJ,IACEkB,EAMEf,EANFe,YACAC,EAKEhB,EALFgB,eACAC,EAIEjB,EAJFiB,aACAC,EAGElB,EAHFkB,aACAC,EAEEnB,EAFFmB,SACAC,EACEpB,EADFoB,OAGF,OACE,iCACE,SAAC,EAAD,CAAU1B,GAAIY,EAAd,qBACCJ,IAAS,eAAImB,MAAO,CAAEC,WAAY,QAAzB,SAAoCpB,KAC9C,gBACEqB,IAAG,0CAAqCR,GACxCS,MAAM,MACNC,IAAG,UAAKT,EAAL,cAEL,0BACGA,EADH,KACqBU,SAAST,GAD9B,QAGA,wCAAgBU,KAAKC,MAAqB,GAAfV,GAA3B,QACA,sCACA,uBAAIC,KACJ,oCACA,uBAAIC,GAAUA,EAAOS,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,QACnD,mDACA,2BACE,yBACE,SAAC,KAAD,CAAMtC,GAAI,OAAQa,MAAO,CAAEC,KAAMJ,EAASG,MAAMC,MAAhD,qBAIF,yBACE,SAAC,KAAD,CAAMd,GAAI,UAAWa,MAAO,CAAEC,KAAMJ,EAASG,MAAMC,MAAnD,2BAKJ,SAAC,KAAD,MAGL,C","sources":["components/BackLink/BackLinK.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import { BiArrowBack } from 'react-icons/bi';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <Link to={to}>\n      <BiArrowBack size=\"20\" />\n      {children}\n    </Link>\n  );\n};\n\nexport default BackLink;\n\nBackLink.propTypes = {\n  to: PropTypes.object.isRequired,\n  children: PropTypes.string.isRequired,\n};\n","import { Link, Outlet } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { fetchDetails } from 'services/api';\nimport BackLink from 'components/BackLink/BackLinK';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [details, setDetails] = useState({});\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const getDetails = async id => {\n      try {\n        const movieInfo = await fetchDetails(id);\n        setDetails(movieInfo);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        return;\n      }\n    };\n    getDetails(movieId);\n  }, [movieId]);\n\n  const {\n    poster_path,\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = details;\n\n  return (\n    <>\n      <BackLink to={backLinkHref}>Go back</BackLink>\n      {error && <h3 style={{ marginLeft: '15px' }}>{error}</h3>}\n      <img\n        src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\n        width=\"280\"\n        alt={`${original_title} poster`}\n      />\n      <h2>\n        {original_title} ({parseInt(release_date)})\n      </h2>\n      <p>User Score: {Math.round(vote_average * 10)}%</p>\n      <h3>OwerView</h3>\n      <p>{overview}</p>\n      <h4>Genres</h4>\n      <p>{genres && genres.map(genre => genre.name).join(' ')}</p>\n      <p>Additional information</p>\n      <ul>\n        <li>\n          <Link to={'cast'} state={{ from: location.state.from }}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to={'reviews'} state={{ from: location.state.from }}>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["to","children","size","movieId","useParams","useState","details","setDetails","error","setError","location","useLocation","backLinkHref","state","from","useEffect","getDetails","id","fetchDetails","movieInfo","message","poster_path","original_title","release_date","vote_average","overview","genres","style","marginLeft","src","width","alt","parseInt","Math","round","map","genre","name","join"],"sourceRoot":""}