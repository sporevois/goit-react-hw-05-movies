{"version":3,"file":"static/js/838.e2a25ef7.chunk.js","mappings":"oSAGaA,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,+V,SCUrB,EATmB,SAAC,GAAsB,IAApBE,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SACxB,OACE,UAACJ,EAAD,CAAUG,GAAIA,EAAd,WACE,SAAC,MAAD,CAAaE,KAAK,OACjBD,IAGN,E,SCRYE,EAAUL,EAAAA,GAAAA,IAAH,qEAKPM,EAAMN,EAAAA,GAAAA,IAAH,iIAOHO,GAAaP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,2XAuBVS,EAAUT,EAAAA,GAAAA,GAAH,wK,SC8CpB,EA3EqB,WAAO,IAAD,IACjBU,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAY,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,KAE7CC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,WAAMC,GAAN,iGAESC,EAAAA,EAAAA,IAAaD,GAFtB,OAETE,EAFS,OAGfZ,EAAWY,GAHI,gDAKfV,EAAS,KAAMW,SALA,2GAAH,sDAUhBJ,EAAWb,EACZ,GAAE,CAACA,IAEJ,IACEkB,EAMEf,EANFe,YACAC,EAKEhB,EALFgB,eACAC,EAIEjB,EAJFiB,aACAC,EAGElB,EAHFkB,aACAC,EAEEnB,EAFFmB,SACAC,EACEpB,EADFoB,OAGF,OACE,+BACE,UAAC,IAAD,YACE,SAAC,EAAD,CAAY/B,GAAIiB,EAAhB,qBACCJ,IAAS,wBAAKA,KACf,UAACT,EAAD,YACE,gBACE4B,IAAG,0CAAqCN,GACxCO,MAAM,MACNC,IAAG,UAAKP,EAAL,cAEL,UAACxB,EAAD,YACE,0BACGwB,EADH,KACqBQ,SAASP,GAD9B,QAGA,wCAAgBQ,KAAKC,MAAqB,GAAfR,GAA3B,QACA,sCACA,uBAAIC,KACJ,oCACA,uBAAIC,GAAUA,EAAOO,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,cAIvD,mDACA,UAAClC,EAAD,YACE,yBACE,SAACF,EAAD,CAAYL,GAAI,OAAQkB,MAAO,CAAEC,KAAMJ,EAASG,MAAMC,MAAtD,qBAIF,yBACE,SAACd,EAAD,CAAYL,GAAI,UAAWkB,MAAO,CAAEC,KAAMJ,EAASG,MAAMC,MAAzD,2BAMJ,SAAC,EAAAuB,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,UAKT,C","sources":["components/GoBackLink/BackLink.styled.jsx","components/GoBackLink/GoBackLink.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const BackLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 15px;\n  width: 100px;\n  text-decoration: none;\n  font-size: 16px;\n  border: 1px solid black;\n  border-radius: 2px;\n  color: black;\n\n  &:hover {\n    scale: 1.1;\n    color: red;\n    border-color: red;\n    transition: 250ms;\n  }\n`;\n","import { BiArrowBack } from 'react-icons/bi';\nimport PropTypes from 'prop-types';\nimport { BackLink } from './BackLink.styled';\n\nconst GoBackLink = ({ to, children }) => {\n  return (\n    <BackLink to={to}>\n      <BiArrowBack size=\"20\" />\n      {children}\n    </BackLink>\n  );\n};\n\nexport default GoBackLink;\n\nGoBackLink.propTypes = {\n  to: PropTypes.object.isRequired,\n  children: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  gap: 10px;\n  padding-bottom 15px;\n  border-bottom: 2px solid rgba(0, 0, 0, 0.25);\n`;\n\nexport const StyledLink = styled(NavLink)`\n  padding: 5px;\n  color: black;\n  font-size: 16px;\n  line-height: 1.12;\n  font-weight: 500;\n  border: 1px solid black;\n  border-radius: 2px;\n  text-decoration: none;\n\n  &:hover {\n    color: red;\n    border-color: red;\n    transition: 250px;\n  }\n\n  &.active {\n    color: white;\n    border-color: red;\n    background-color: crimson;\n  }\n`;\n\nexport const NavList = styled.ul`\n  display: flex;\n  gap: 10px;\n  padding-bottom: 30px;\n  border-bottom: 2px solid rgba(0, 0, 0, 0.25);\n\n  li {\n    list-style: none;\n  }\n`;\n","import { Outlet } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { fetchDetails } from 'services/api';\nimport GoBackLink from 'components/GoBackLink/GoBackLink';\nimport { Container } from 'utils/Container.styled';\nimport { Box, Wrapper, StyledLink, NavList } from './MovieDetails.styled';\nimport Loader from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [details, setDetails] = useState({});\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const getDetails = async id => {\n      try {\n        const movieInfo = await fetchDetails(id);\n        setDetails(movieInfo);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        return;\n      }\n    };\n    getDetails(movieId);\n  }, [movieId]);\n\n  const {\n    poster_path,\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = details;\n\n  return (\n    <>\n      <Container>\n        <GoBackLink to={backLinkHref}>Go back</GoBackLink>\n        {error && <h3>{error}</h3>}\n        <Box>\n          <img\n            src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\n            width=\"280\"\n            alt={`${original_title} poster`}\n          />\n          <Wrapper>\n            <h2>\n              {original_title} ({parseInt(release_date)})\n            </h2>\n            <p>User Score: {Math.round(vote_average * 10)}%</p>\n            <h3>OwerView</h3>\n            <p>{overview}</p>\n            <h4>Genres</h4>\n            <p>{genres && genres.map(genre => genre.name).join(' ')}</p>\n          </Wrapper>\n        </Box>\n\n        <p>Additional information</p>\n        <NavList>\n          <li>\n            <StyledLink to={'cast'} state={{ from: location.state.from }}>\n              Cast\n            </StyledLink>\n          </li>\n          <li>\n            <StyledLink to={'reviews'} state={{ from: location.state.from }}>\n              Reviews\n            </StyledLink>\n          </li>\n        </NavList>\n\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </Container>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["BackLink","styled","Link","to","children","size","Wrapper","Box","StyledLink","NavLink","NavList","movieId","useParams","useState","details","setDetails","error","setError","location","useLocation","backLinkHref","state","from","useEffect","getDetails","id","fetchDetails","movieInfo","message","poster_path","original_title","release_date","vote_average","overview","genres","src","width","alt","parseInt","Math","round","map","genre","name","join","Suspense","fallback","Loader"],"sourceRoot":""}