{"version":3,"file":"static/js/36.6f37030d.chunk.js","mappings":"wQAEaA,E,OAAOC,GAAAA,KAAH,6oB,SC+BjB,EA7BkB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC1B,GAA0BC,EAAAA,EAAAA,UAASF,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KAaA,OACE,UAACN,EAAD,CAAMG,SAZa,SAAAI,GACnBA,EAAMC,iBAEW,KAAjBH,EAAMI,OACFC,MAAM,0CACNP,EAASE,EACd,EAMC,WACE,kBACEM,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,KAAK,QACLb,MAAOG,EACPW,QAZc,SAAAT,GAClBD,EAASC,EAAMU,OAAOf,MAAMgB,cAC7B,KAYG,mBAAQP,KAAK,SAAb,sBAGL,E,2BC4BD,EArDe,WAAO,IAAD,EACnB,GAAsCP,EAAAA,EAAAA,UAAS,IAA/C,eAAOe,EAAP,KAAoBC,EAApB,KACA,GAA0BhB,EAAAA,EAAAA,UAAS,MAAnC,eAAOiB,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAW,UAAGJ,EAAaK,IAAI,gBAApB,QAAgC,IAEjDC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAIA,IAAMG,EAAgB,mCAAG,8GAEOC,EAAAA,EAAAA,IAAaJ,GAFpB,UAGQ,KADvBK,EAFe,QAGHC,OAHG,sBAIb,IAAIC,MAAJ,UACDP,EADC,8CAJa,OAQrBR,GAAe,OAAIa,IARE,gDAUrBX,EAAS,KAAMc,SAVM,2GAAH,qDAetBL,GAjBC,CAkBF,GAAE,CAACH,EAAaJ,IASjB,OACE,UAAC,IAAD,YACE,SAAC,EAAD,CAAWtB,MAAO0B,EAAazB,SATd,SAAAE,GACfuB,IAAgBvB,IAClBiB,EAAS,MACTG,EAA0B,KAAVpB,EAAe,CAAEA,MAAAA,GAAU,CAAC,GAE/C,IAKIgB,IAAS,eAAIgB,MAAO,CAAEC,WAAY,QAAzB,SAAoCjB,KAC9C,wBACGF,EAAYoB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACf,SAAC,IAAD,WACE,SAAC,KAAD,CAAMC,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAMlB,GAAlC,SACGe,KAFUD,EADA,QAUxB,C","sources":["components/SearchBox/SearchBox.styled.jsx","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  input {\n    padding: 5px;\n    font-weight: 500;\n    font-size: 14px;\n\n    &:focus {\n      box-shadow: 2px 2px 5px indianred;\n      transition: 250ms;\n    }\n  }\n\n  button {\n    align-items: center;\n    margin-left: 5px;\n    padding: 2px 5px;\n    height: 28px;\n    font-size: 14px;\n    color: white;\n    background: linear-gradient(0deg, lightcoral 0%, Crimson 100%);\n    border: 1px solid #9246ad;\n    border-radius: 2px;\n    cursor: pointer;\n    user-select: none;\n    -webkit-user-select: none;\n    touch-action: manipulation;\n\n    &:hover {\n      scale: 1.1;\n      transition: 250ms;\n    }\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from './SearchBox.styled';\n\nconst SearchBox = ({ value, onSubmit }) => {\n  const [query, setQuery] = useState(value);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    query.trim() === ''\n      ? alert('Please enter something to searh querry')\n      : onSubmit(query);\n  };\n\n  const handleInput = event => {\n    setQuery(event.target.value.toLowerCase());\n  };\n  return (\n    <Form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        name=\"query\"\n        value={query}\n        onInput={handleInput}\n      />\n      <button type=\"submit\">Search</button>\n    </Form>\n  );\n};\nexport default SearchBox;\n\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport SearchBox from 'components/SearchBox/SearchBox';\nimport { searchMovies } from 'services/api';\nimport { Container } from 'utils/Container.styled';\nimport { ListItem } from 'pages/Home/Home.styled';\n\nconst Movies = () => {\n  const [foundMovies, setFoundMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const searchQuery = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n\n    const getMoviesByQuery = async () => {\n      try {\n        const searchResults = await searchMovies(searchQuery);\n        if (searchResults.length === 0) {\n          throw new Error(\n            `${searchQuery} not found. Please, enter another request`\n          );\n        }\n        setFoundMovies([...searchResults]);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        return;\n      }\n    };\n    getMoviesByQuery();\n  }, [searchQuery, searchParams]);\n\n  const handleSubmit = query => {\n    if (searchQuery !== query) {\n      setError(null);\n      setSearchParams(query !== '' ? { query } : {});\n    }\n  };\n\n  return (\n    <Container>\n      <SearchBox value={searchQuery} onSubmit={handleSubmit} />\n      {error && <h3 style={{ marginLeft: '15px' }}>{error}</h3>}\n      <ul>\n        {foundMovies.map(({ id, original_title }) => (\n          <ListItem key={id}>\n            <Link to={`${id}`} state={{ from: location }}>\n              {original_title}\n            </Link>\n          </ListItem>\n        ))}\n      </ul>\n    </Container>\n  );\n};\nexport default Movies;\n"],"names":["Form","styled","value","onSubmit","useState","query","setQuery","event","preventDefault","trim","alert","type","autoComplete","autoFocus","placeholder","name","onInput","target","toLowerCase","foundMovies","setFoundMovies","error","setError","useSearchParams","searchParams","setSearchParams","location","useLocation","searchQuery","get","useEffect","getMoviesByQuery","searchMovies","searchResults","length","Error","message","style","marginLeft","map","id","original_title","to","state","from"],"sourceRoot":""}